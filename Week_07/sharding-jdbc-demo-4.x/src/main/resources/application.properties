############ base config ############ 
#debug=true
logging.level.com.gerry.pang=debug
spring.application.name=sharding-jdbc-demo
server.port=8080


############ JDBC base config ############
##### master 
spring.datasource.druid.master.name=masterDataSource
spring.datasource.druid.master.type=com.alibaba.druid.pool.DruidDataSource 
spring.datasource.druid.master.url=jdbc:mysql://localhost/test?useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC
spring.datasource.druid.master.username=root
spring.datasource.druid.master.password=123456
spring.datasource.druid.master.driver-class-name=com.mysql.jdbc.Driver
############ Druid 连接池 config ############ 
# 初始化大小，最小，最大
spring.datasource.druid.master.initial-size=1
spring.datasource.druid.master.min-idle=3
spring.datasource.druid.master.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.druid.master.max-wait=60000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.master.pool-prepared-statements=true
spring.datasource.druid.master.max-pool-prepared-statement-per-connection-size=20 
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.master.time-between-eviction-runs-millis=2000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.master.min-evictable-idle-time-millis=600000
spring.datasource.druid.master.max-evictable-idle-time-millis=900000
# 用来检测连接是否有效的sql
spring.datasource.druid.master.validation-query=select 'x'
# 检测连接是否有效的超时时间。单位：秒，
spring.datasource.druid.master.query-timeout=5
# 是否在获得连接后检测其可用性
spring.datasource.druid.master.test-on-borrow=false
# 是否在连接放回连接池后检测其可用性
spring.datasource.druid.master.test-on-return=false
# 是否在连接空闲一段时间后检测其可用性
spring.datasource.druid.master.test-while-idle=true

##### slave 
spring.datasource.druid.slave.name=slaveDataSource
spring.datasource.druid.slave.type=com.alibaba.druid.pool.DruidDataSource 
spring.datasource.druid.slave.url=jdbc:mysql://localhost/test_slave?useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC
spring.datasource.druid.slave.username=root
spring.datasource.druid.slave.password=123456
spring.datasource.druid.slave.driver-class-name=com.mysql.jdbc.Driver
############ Druid 连接池 config ############ 
# 初始化大小，最小，最大
spring.datasource.druid.slave.initial-size=1
spring.datasource.druid.slave.min-idle=3
spring.datasource.druid.slave.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.druid.slave.max-wait=60000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.slave.pool-prepared-statements=true
spring.datasource.druid.slave.max-pool-prepared-statement-per-connection-size=20 
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.slave.time-between-eviction-runs-millis=2000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.slave.min-evictable-idle-time-millis=600000
spring.datasource.druid.slave.max-evictable-idle-time-millis=900000
# 用来检测连接是否有效的sql
spring.datasource.druid.slave.validation-query=select 'x'
# 检测连接是否有效的超时时间。单位：秒，
spring.datasource.druid.slave.query-timeout=5
# 是否在获得连接后检测其可用性
spring.datasource.druid.slave.test-on-borrow=false
# 是否在连接放回连接池后检测其可用性
spring.datasource.druid.slave.test-on-return=false
# 是否在连接空闲一段时间后检测其可用性
spring.datasource.druid.slave.test-while-idle=true


############  MyBatis config ############ 
mybatis.type-aliases-package=com.gerry.pang.entity
mybatis.mapper-locations=classpath*:mapper/*Mapper.xml
